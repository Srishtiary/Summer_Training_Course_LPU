package strings;
import java.util.Scanner;

public class StringStudy {
    public static void main(String[] args){
        String name = "CipherSchools";//created using string literals - stored in method area
        String name2 = "CipherSchools";
      //9. Extract a Substring
        System.out.println("=====================");
        System.out.println("9. Extract a Substring");
        String wF = "Wakanda Forever";
        String subString = wF.substring(3); //From starting index included till the end of string.
        System.out.println(subString);

        String subString2 = wF.substring(3,7); //From starting index included till ending index[excluded]
        System.out.println(subString2);

        //10. Finding a character at a given index
        System.out.println("==========================");
        System.out.println("10. Finding a character at a given index");
        System.out.println(name.charAt(4));
        char charAtIndex = name.charAt(6);
        System.out.println(charAtIndex);

        //11. Char Array from a string
        System.out.println("==========================");
        System.out.println(" 11.Char Array from a string ");
        char arr2[] = name.toCharArray(); // String to char array
        for(int i=0; i<arr2.length;i++){
            System.out.println(arr2[i]);
        }
        //12. Check if a string is empty
        System.out.println("====================================");
        System.out.println("12. Check if a string is empty");
        String emptyString = new String();
        String emptyString2 = "";
        String blankString = "    ";
        System.out.println(emptyString);
        System.out.println(emptyString2);
        System.out.println(emptyString.equals(""));
        System.out.println(emptyString2.equals(""));
        System.out.println(emptyString.isEmpty());
        System.out.println(emptyString2.isEmpty());
        System.out.println(blankString.isEmpty());
        System.out.println(emptyString.isBlank());

        //13. Comparing string lexicographically -> alphabetically
        System.out.println("=============================");
        System.out.println("13.Comparing strings lexicographically -> ");
        String textOne = "QHey!";
        String textTwo = "QBye";
        System.out.println(textOne.compareTo(textTwo));//compares character by character
        System.out.println(textTwo.compareTo(textOne));
        System.out.println(textOne.compareTo(textOne));

        //14. Trimming white spaces from front and end
        System.out.println("===================================");
        System.out.println("14. Trimming white space from front and end");
        String s5 = new String("Hello                ");
        String s6 = new String("             Hello               ");
        String s7 = new String("                Hello      People      ");
        System.out.println("*" + s5.trim() + "*");
        System.out.println("*" + s7.trim() + "*");

        //15.Replacing a character
        System.out.println("===============================");
        System.out.println("15.Replacing a character");
        System.out.println(name.replace('o', 'O'));
        System.out.println(name.replace("oo", "oooo"));

    }
}
